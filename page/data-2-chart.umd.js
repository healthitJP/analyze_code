!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Data2Chart={})}(this,(function(t){"use strict";var e,i,s,h,l,o,a,n,r,c,x=t=>{throw TypeError(t)},g=(t,e,i)=>e.has(t)||x("Cannot "+i),p=(t,e,i)=>(g(t,e,"read from private field"),i?i.call(t):e.get(t)),d=(t,e,i)=>e.has(t)?x("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),m=(t,e,i,s)=>(g(t,e,"write to private field"),s?s.call(t,i):e.set(t,i),i);class y{constructor(t){d(this,e),d(this,i),d(this,s),d(this,h),d(this,l,null),d(this,o,70),d(this,a,50),d(this,n,!1),d(this,r,0),d(this,c,0);const x=document.getElementById(t);if(!x)throw new Error(`Element with id ${t} not found`);m(this,s,document.createElement("canvas")),p(this,s).width=x.clientWidth,p(this,s).height=x.clientHeight,x.appendChild(p(this,s)),m(this,h,p(this,s).getContext("2d")),m(this,e,{graphStyle:{graphTitle:"",legend:{visible:!0},axis:{xAxis:{title:"X Axis",tickNumber:10,showLine:!0,min:0,max:100},yAxis:{title:"Y Axis",tickNumber:10,showLine:!0,min:0,max:100}},graphType:"line",seriesName:"Series 1"},control:{zoom:!0,pan:!0,tooltip:!0,locked:!1,lockedMouse:!1,lockedWheel:!1,lockedTouch:!1},colorScheme:{background:"#ffffff",axisColor:"#000000",seriesColor:"#ff0000"}}),m(this,i,[]),p(this,s).addEventListener("wheel",this.handleZoom.bind(this)),p(this,s).addEventListener("mousedown",this.startPan.bind(this)),p(this,s).addEventListener("mouseup",this.endPan.bind(this)),p(this,s).addEventListener("mousemove",this.handlePan.bind(this)),p(this,s).addEventListener("mousemove",this.showTooltip.bind(this)),p(this,s).addEventListener("touchstart",this.startPanTouch.bind(this)),p(this,s).addEventListener("touchend",this.endPanTouch.bind(this)),p(this,s).addEventListener("touchmove",this.handlePanTouch.bind(this)),p(this,s).addEventListener("touchstart",this.handlePinchZoom.bind(this)),p(this,s).addEventListener("touchmove",this.handlePinchZoom.bind(this)),p(this,s).addEventListener("touchend",this.resetPinchZoom.bind(this));const g=document.createElement("div");g.id="tooltip",g.style.position="absolute",g.style.backgroundColor="rgba(0, 0, 0, 0.7)",g.style.color="#fff",g.style.padding="5px",g.style.borderRadius="3px",g.style.pointerEvents="none",g.style.display="none",document.body.appendChild(g)}async loadConfig(t){var i,s,h,l,o,a,n,r,c,x,g,d,m;const y=await fetch(t),u=await y.text(),S=(new DOMParser).parseFromString(u,"application/xml"),A=S.getElementsByTagName("graphStyle")[0];A&&(p(this,e).graphStyle.graphTitle=(null==(i=A.getElementsByTagName("graphTitle")[0])?void 0:i.textContent)||p(this,e).graphStyle.graphTitle,p(this,e).graphStyle.legend.visible="true"===(null==(s=A.getElementsByTagName("legend")[0])?void 0:s.getAttribute("visible"))||p(this,e).graphStyle.legend.visible,p(this,e).graphStyle.axis.xAxis.title=(null==(h=A.getElementsByTagName("xAxis")[0])?void 0:h.getAttribute("title"))||p(this,e).graphStyle.axis.xAxis.title,p(this,e).graphStyle.axis.xAxis.tickNumber=parseInt((null==(l=A.getElementsByTagName("xAxis")[0])?void 0:l.getAttribute("tickNumber"))||p(this,e).graphStyle.axis.xAxis.tickNumber.toString(),10),p(this,e).graphStyle.axis.xAxis.showLine="true"===(null==(o=A.getElementsByTagName("xAxis")[0])?void 0:o.getAttribute("showLine"))||p(this,e).graphStyle.axis.xAxis.showLine,p(this,e).graphStyle.axis.yAxis.title=(null==(a=A.getElementsByTagName("yAxis")[0])?void 0:a.getAttribute("title"))||p(this,e).graphStyle.axis.yAxis.title,p(this,e).graphStyle.axis.yAxis.tickNumber=parseInt((null==(n=A.getElementsByTagName("yAxis")[0])?void 0:n.getAttribute("tickNumber"))||p(this,e).graphStyle.axis.yAxis.tickNumber.toString(),10),p(this,e).graphStyle.axis.yAxis.showLine="true"===(null==(r=A.getElementsByTagName("yAxis")[0])?void 0:r.getAttribute("showLine"))||p(this,e).graphStyle.axis.yAxis.showLine,p(this,e).graphStyle.graphType=(null==(c=A.getElementsByTagName("graphType")[0])?void 0:c.textContent)||p(this,e).graphStyle.graphType,p(this,e).graphStyle.seriesName=(null==(x=A.getElementsByTagName("seriesName")[0])?void 0:x.textContent)||p(this,e).graphStyle.seriesName);const b=S.getElementsByTagName("control")[0];b&&(p(this,e).control.zoom="true"===b.getAttribute("zoom")||p(this,e).control.zoom,p(this,e).control.pan="true"===b.getAttribute("pan")||p(this,e).control.pan,p(this,e).control.tooltip="true"===b.getAttribute("tooltip")||p(this,e).control.tooltip,p(this,e).control.locked="true"===b.getAttribute("locked")||p(this,e).control.locked,p(this,e).control.lockedMouse="true"===b.getAttribute("lockedMouse")||p(this,e).control.lockedMouse,p(this,e).control.lockedWheel="true"===b.getAttribute("lockedWheel")||p(this,e).control.lockedWheel,p(this,e).control.lockedTouch="true"===b.getAttribute("lockedTouch")||p(this,e).control.lockedTouch);const f=S.getElementsByTagName("colorScheme")[0];f&&(p(this,e).colorScheme.background=(null==(g=f.getElementsByTagName("background")[0])?void 0:g.textContent)||p(this,e).colorScheme.background,p(this,e).colorScheme.axisColor=(null==(d=f.getElementsByTagName("axisColor")[0])?void 0:d.textContent)||p(this,e).colorScheme.axisColor,p(this,e).colorScheme.seriesColor=(null==(m=f.getElementsByTagName("seriesColor")[0])?void 0:m.textContent)||p(this,e).colorScheme.seriesColor)}async loadData(t){if("string"==typeof t){const e=await fetch(t),s=await e.text();t.endsWith(".csv")?m(this,i,this.parseCSV(s)):t.endsWith(".json")?m(this,i,JSON.parse(s)):t.endsWith(".xml")&&m(this,i,this.parseXML(s))}else m(this,i,t);const s=p(this,i).map((t=>t.xValue)),h=Math.min(...s),l=Math.max(...s),o=.1*(l-h);p(this,e).graphStyle.axis.xAxis.min=h<0?h-o:0,p(this,e).graphStyle.axis.xAxis.max=l+o;const a=p(this,i).map((t=>t.yValue)),n=Math.min(...a),r=Math.max(...a),c=.1*(r-n);p(this,e).graphStyle.axis.yAxis.min=n<0?n-c:0,p(this,e).graphStyle.axis.yAxis.max=r+c,this.draw()}parseCSV(t){const e=t.split("\n"),i=[];for(let s=0;s<e.length;s++){const t=e[s].split(",");i.push({xValue:parseFloat(t[0]),yValue:parseFloat(t[1])})}return i}parseXML(t){const e=(new DOMParser).parseFromString(t,"application/xml").getElementsByTagName("entry"),i=[];for(let s=0;s<e.length;s++){const t=e[s];i.push({xValue:parseFloat(t.getElementsByTagName("xValue")[0].textContent||"0"),yValue:parseFloat(t.getElementsByTagName("yValue")[0].textContent||"0")})}return i}draw(){p(this,h).clearRect(0,0,p(this,s).width,p(this,s).height),p(this,h).fillStyle=p(this,e).colorScheme.background,p(this,h).fillRect(0,0,p(this,s).width,p(this,s).height);const t=p(this,e).graphStyle.axis.xAxis.min,l=p(this,e).graphStyle.axis.xAxis.max,n=p(this,e).graphStyle.axis.yAxis.min,r=p(this,e).graphStyle.axis.yAxis.max;if("line"===p(this,e).graphStyle.graphType){p(this,h).strokeStyle=p(this,e).colorScheme.seriesColor,p(this,h).beginPath(),p(this,h).moveTo(p(this,o)+(p(this,i)[0].xValue-t)/(l-t)*(p(this,s).width-100),p(this,s).height-p(this,a)-(p(this,i)[0].yValue-n)/(r-n)*(p(this,s).height-100));for(let e=1;e<p(this,i).length;e++)p(this,h).lineTo(p(this,o)+(p(this,i)[e].xValue-t)/(l-t)*(p(this,s).width-100),p(this,s).height-p(this,a)-(p(this,i)[e].yValue-n)/(r-n)*(p(this,s).height-100));p(this,h).stroke()}else if("scatter"===p(this,e).graphStyle.graphType){p(this,h).fillStyle=p(this,e).colorScheme.seriesColor;for(let e=0;e<p(this,i).length;e++){const c=p(this,o)+(p(this,i)[e].xValue-t)/(l-t)*(p(this,s).width-100),x=p(this,s).height-p(this,a)-(p(this,i)[e].yValue-n)/(r-n)*(p(this,s).height-100);p(this,h).beginPath(),p(this,h).arc(c,x,3,0,2*Math.PI),p(this,h).fill()}}p(this,h).strokeStyle=p(this,e).colorScheme.axisColor,p(this,h).beginPath(),p(this,h).moveTo(p(this,o),0),p(this,h).lineTo(p(this,o),p(this,s).height-p(this,a)),p(this,h).lineTo(p(this,s).width,p(this,s).height-p(this,a)),p(this,h).stroke(),p(this,h).fillStyle=p(this,e).colorScheme.axisColor,p(this,h).font="16px Arial",p(this,h).fillText(p(this,e).graphStyle.axis.xAxis.title,p(this,s).width/2,p(this,s).height-10),p(this,h).save(),p(this,h).rotate(-Math.PI/2),p(this,h).fillText(p(this,e).graphStyle.axis.yAxis.title,-p(this,s).height/2,20),p(this,h).restore();const c=p(this,e).graphStyle.axis.xAxis.tickNumber;for(let e=t;e<=l+(l-t)/Math.max(c,1);e+=(l-t)/Math.max(c,1)){const i=p(this,o)+(e-t)/(l-t)*(p(this,s).width-100);p(this,h).beginPath(),p(this,h).moveTo(i,p(this,s).height-p(this,a)),p(this,h).lineTo(i,p(this,s).height-p(this,a)+5),p(this,h).stroke(),p(this,h).fillText(e.toPrecision(3).toString(),i-5,p(this,s).height-30)}const x=p(this,e).graphStyle.axis.yAxis.tickNumber;for(let e=n;e<=r+(r-n)/Math.max(x,1);e+=(r-n)/Math.max(x,1)){const t=p(this,s).height-p(this,a)-(e-n)/(r-n)*(p(this,s).height-100);p(this,h).beginPath(),p(this,h).moveTo(p(this,o),t),p(this,h).lineTo(p(this,o)-5,t),p(this,h).stroke(),p(this,h).fillText(e.toPrecision(3).toString(),25,t+5)}p(this,e).graphStyle.legend.visible&&(p(this,h).fillStyle=p(this,e).colorScheme.seriesColor,p(this,h).fillRect(p(this,s).width-150,10,10,10),p(this,h).fillStyle=p(this,e).colorScheme.axisColor,p(this,h).fillText(p(this,e).graphStyle.seriesName,p(this,s).width-130,20)),p(this,h).fillStyle=p(this,e).colorScheme.axisColor,p(this,h).font="20px Arial",p(this,h).fillText(p(this,e).graphStyle.graphTitle,p(this,s).width/2-p(this,h).measureText(p(this,e).graphStyle.graphTitle).width/2,30)}setAxisLabels(t,i){p(this,e).graphStyle.axis.xAxis.title=t,p(this,e).graphStyle.axis.yAxis.title=i,this.draw()}setAxisRange(t,i,s,h){p(this,e).graphStyle.axis.xAxis.min=t,p(this,e).graphStyle.axis.xAxis.max=i,p(this,e).graphStyle.axis.yAxis.min=s,p(this,e).graphStyle.axis.yAxis.max=h,this.draw()}showLegend(t){p(this,e).graphStyle.legend.visible=t,this.draw()}setTitle(t){p(this,e).graphStyle.graphTitle=t,this.draw()}setColorScheme(t){p(this,e).colorScheme=t,this.draw()}enableZoom(t){p(this,e).control.zoom=t}handleZoom(t){if(!p(this,e).control.zoom||p(this,e).control.locked||p(this,e).control.lockedWheel)return;t.preventDefault();const i=t.deltaY>0?1.1:1/1.1,h=p(this,s).getBoundingClientRect(),l=(t.clientX-h.left)/p(this,s).width,o=(t.clientY-h.top)/p(this,s).height,a=p(this,e).graphStyle.axis.xAxis.max-p(this,e).graphStyle.axis.xAxis.min,n=p(this,e).graphStyle.axis.yAxis.max-p(this,e).graphStyle.axis.yAxis.min;p(this,e).graphStyle.axis.xAxis.min+=a*(1-i)*l,p(this,e).graphStyle.axis.xAxis.max-=a*(1-i)*(1-l),p(this,e).graphStyle.axis.yAxis.min+=n*(1-i)*o,p(this,e).graphStyle.axis.yAxis.max-=n*(1-i)*(1-o),this.draw()}handlePinchZoom(t){if(p(this,e).control.zoom&&!p(this,e).control.locked&&!p(this,e).control.lockedTouch&&2===t.touches.length){t.preventDefault();const i=t.touches[0],h=t.touches[1],o=Math.sqrt(Math.pow(h.clientX-i.clientX,2)+Math.pow(h.clientY-i.clientY,2));if(p(this,l)){const t=p(this,l)/o,a=p(this,s).getBoundingClientRect(),n=((i.clientX+h.clientX)/2-a.left)/p(this,s).width,r=((i.clientY+h.clientY)/2-a.top)/p(this,s).height,c=p(this,e).graphStyle.axis.xAxis.max-p(this,e).graphStyle.axis.xAxis.min,x=p(this,e).graphStyle.axis.yAxis.max-p(this,e).graphStyle.axis.yAxis.min;p(this,e).graphStyle.axis.xAxis.min+=c*(1-t)*n,p(this,e).graphStyle.axis.xAxis.max-=c*(1-t)*(1-n),p(this,e).graphStyle.axis.yAxis.min+=x*(1-t)*r,p(this,e).graphStyle.axis.yAxis.max-=x*(1-t)*(1-r),this.draw()}m(this,l,o)}}resetPinchZoom(){m(this,l,null)}enablePan(t){p(this,e).control.pan=t}startPan(t){!p(this,e).control.pan||p(this,e).control.locked||p(this,e).control.lockedMouse||(m(this,n,!0),m(this,r,t.clientX),m(this,c,t.clientY))}endPan(){m(this,n,!1)}handlePan(t){if(!p(this,n)||!p(this,e).control.pan||p(this,e).control.locked||p(this,e).control.lockedMouse)return;const i=t.clientX-p(this,r),h=t.clientY-p(this,c),l=p(this,e).graphStyle.axis.xAxis.max-p(this,e).graphStyle.axis.xAxis.min,o=p(this,e).graphStyle.axis.yAxis.max-p(this,e).graphStyle.axis.yAxis.min,a=i/p(this,s).width*l,x=h/p(this,s).height*o;p(this,e).graphStyle.axis.xAxis.min-=a,p(this,e).graphStyle.axis.xAxis.max-=a,p(this,e).graphStyle.axis.yAxis.min+=x,p(this,e).graphStyle.axis.yAxis.max+=x,m(this,r,t.clientX),m(this,c,t.clientY),this.draw()}startPanTouch(t){!p(this,e).control.pan||p(this,e).control.locked||p(this,e).control.lockedTouch||(m(this,n,!0),m(this,r,t.touches[0].clientX),m(this,c,t.touches[0].clientY))}endPanTouch(){m(this,n,!1)}handlePanTouch(t){if(!p(this,n)||!p(this,e).control.pan||p(this,e).control.locked||p(this,e).control.lockedTouch)return;const i=t.touches[0].clientX-p(this,r),h=t.touches[0].clientY-p(this,c),l=p(this,e).graphStyle.axis.xAxis.max-p(this,e).graphStyle.axis.xAxis.min,o=p(this,e).graphStyle.axis.yAxis.max-p(this,e).graphStyle.axis.yAxis.min,a=i/p(this,s).width*l,x=h/p(this,s).height*o;p(this,e).graphStyle.axis.xAxis.min-=a,p(this,e).graphStyle.axis.xAxis.max-=a,p(this,e).graphStyle.axis.yAxis.min+=x,p(this,e).graphStyle.axis.yAxis.max+=x,m(this,r,t.touches[0].clientX),m(this,c,t.touches[0].clientY),this.draw()}enableTooltip(t){p(this,e).control.tooltip=t}showTooltip(t){if(!p(this,e).control.tooltip||p(this,e).control.locked||p(this,e).control.lockedMouse)return;const l=p(this,s).getBoundingClientRect(),n=t.clientX-l.left,r=t.clientY-l.top,c=p(this,e).graphStyle.axis.xAxis.min,x=p(this,e).graphStyle.axis.xAxis.max,g=p(this,e).graphStyle.axis.yAxis.min,d=p(this,e).graphStyle.axis.yAxis.max,m=c+n/p(this,s).width*(x-c),y=d-r/p(this,s).height*(d-g);let u=null,S=1/0;for(const e of p(this,i)){const t=e.xValue-m,i=e.yValue-y,s=Math.sqrt(t*t+i*i);s<S&&(S=s,u=e)}if(u){const i=document.getElementById("tooltip");i&&(i.style.left=`${t.clientX+10}px`,i.style.top=`${t.clientY+10}px`,i.innerHTML=`x: ${u.xValue}, y: ${u.yValue}`,i.style.display="block"),this.draw(),p(this,h).fillStyle=p(this,e).colorScheme.seriesColor;const l=p(this,o)+(u.xValue-c)/(x-c)*(p(this,s).width-100),n=p(this,s).height-p(this,a)-(u.yValue-g)/(d-g)*(p(this,s).height-100);p(this,h).beginPath(),p(this,h).arc(l,n,5,0,2*Math.PI),p(this,h).fill()}else{const t=document.getElementById("tooltip");t&&(t.style.display="none"),this.draw()}}exportAsImage(t,e){const i=document.createElement("a");i.href=p(this,s).toDataURL(`image/${t}`),i.download=e?e.endsWith(`.${t}`)?e:`${e}.${t}`:`chart.${t}`,i.click()}getCurrentConfig(){return p(this,e)}getCurrentData(){return p(this,i)}exportCurrentConfig(t="config.xml"){const e=this.convertConfigToXml(this.getCurrentConfig()),i=new Blob([e],{type:"application/xml"}),s=document.createElement("a");s.href=URL.createObjectURL(i),s.download=t.endsWith(".xml")?t:`${t}.xml`,s.click()}convertConfigToXml(t){const e=document.implementation.createDocument("","",null),i=e.createElement("config"),s=e.createElement("graphStyle"),h=e.createElement("graphTitle");h.textContent=t.graphStyle.graphTitle,s.appendChild(h);const l=e.createElement("legend");l.setAttribute("visible",t.graphStyle.legend.visible.toString()),s.appendChild(l);const o=e.createElement("axis"),a=e.createElement("xAxis");a.setAttribute("title",t.graphStyle.axis.xAxis.title),a.setAttribute("tickNumber",t.graphStyle.axis.xAxis.tickNumber.toString()),a.setAttribute("showLine",t.graphStyle.axis.xAxis.showLine.toString()),o.appendChild(a);const n=e.createElement("yAxis");n.setAttribute("title",t.graphStyle.axis.yAxis.title),n.setAttribute("tickNumber",t.graphStyle.axis.yAxis.tickNumber.toString()),n.setAttribute("showLine",t.graphStyle.axis.yAxis.showLine.toString()),o.appendChild(n),s.appendChild(o);const r=e.createElement("graphType");r.textContent=t.graphStyle.graphType,s.appendChild(r),i.appendChild(s);const c=e.createElement("control");c.setAttribute("zoom",t.control.zoom.toString()),c.setAttribute("pan",t.control.pan.toString()),c.setAttribute("tooltip",t.control.tooltip.toString()),c.setAttribute("locked",t.control.locked.toString()),c.setAttribute("lockedMouse",t.control.lockedMouse.toString()),c.setAttribute("lockedWheel",t.control.lockedWheel.toString()),i.appendChild(c);const x=e.createElement("colorScheme"),g=e.createElement("background");g.textContent=t.colorScheme.background,x.appendChild(g);const p=e.createElement("axisColor");p.textContent=t.colorScheme.axisColor,x.appendChild(p);const d=e.createElement("seriesColor");d.textContent=t.colorScheme.seriesColor,x.appendChild(d),i.appendChild(x),e.appendChild(i);return(new XMLSerializer).serializeToString(e)}exportCurrentDataAsJSON(t="data.json"){const e=new Blob([JSON.stringify(this.getCurrentData(),null,2)],{type:"application/json"}),i=document.createElement("a");i.href=URL.createObjectURL(e),i.download=t.endsWith(".json")?t:`${t}.json`,i.click()}exportCurrentDataAsCSV(t="data.csv"){const e=p(this,i).map((t=>`${t.xValue},${t.yValue}`)).join("\n"),s=new Blob([e],{type:"text/csv"}),h=document.createElement("a");h.href=URL.createObjectURL(s),h.download=t.endsWith(".csv")?t:`${t}.csv`,h.click()}exportCurrentDataAsXML(t="data.xml"){const e="<data>\n"+p(this,i).map((t=>`  <entry>\n    <value1>${t.xValue}</value1>\n    <value2>${t.yValue}</value2>\n  </entry>`)).join("\n")+"\n</data>",s=new Blob([e],{type:"application/xml"}),h=document.createElement("a");h.href=URL.createObjectURL(s),h.download=t.endsWith(".xml")?t:`${t}.xml`,h.click()}onError(t){window.addEventListener("error",(e=>{t(e.error)}))}}e=new WeakMap,i=new WeakMap,s=new WeakMap,h=new WeakMap,l=new WeakMap,o=new WeakMap,a=new WeakMap,n=new WeakMap,r=new WeakMap,c=new WeakMap,t.createChart=function(t){return new y(t)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
