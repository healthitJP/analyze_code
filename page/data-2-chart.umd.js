!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Data2Chart={})}(this,(function(t){"use strict";var e,i,s,h,l,a,o,n,r,c=t=>{throw TypeError(t)},x=(t,e,i)=>e.has(t)||c("Cannot "+i),g=(t,e,i)=>(x(t,e,"read from private field"),i?i.call(t):e.get(t)),p=(t,e,i)=>e.has(t)?c("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(t):e.set(t,i),d=(t,e,i,s)=>(x(t,e,"write to private field"),s?s.call(t,i):e.set(t,i),i);class m{constructor(t){p(this,e),p(this,i),p(this,s),p(this,h),p(this,l,70),p(this,a,50),p(this,o,!1),p(this,n,0),p(this,r,0);const c=document.getElementById(t);if(!c)throw new Error(`Element with id ${t} not found`);d(this,s,document.createElement("canvas")),g(this,s).width=c.clientWidth,g(this,s).height=c.clientHeight,c.appendChild(g(this,s)),d(this,h,g(this,s).getContext("2d")),d(this,e,{graphStyle:{graphTitle:"",legend:{visible:!0},axis:{xAxis:{title:"X Axis",tickNumber:10,showLine:!0,min:0,max:100},yAxis:{title:"Y Axis",tickNumber:10,showLine:!0,min:0,max:100}},graphType:"line",seriesName:"Series 1"},control:{zoom:!0,pan:!0,tooltip:!0,locked:!1,lockedMouse:!1,lockedWheel:!1},colorScheme:{background:"#ffffff",axisColor:"#000000",seriesColor:"#ff0000"}}),d(this,i,[]),g(this,s).addEventListener("wheel",this.handleZoom.bind(this)),g(this,s).addEventListener("mousedown",this.startPan.bind(this)),g(this,s).addEventListener("mouseup",this.endPan.bind(this)),g(this,s).addEventListener("mousemove",this.handlePan.bind(this)),g(this,s).addEventListener("mousemove",this.showTooltip.bind(this));const x=document.createElement("div");x.id="tooltip",x.style.position="absolute",x.style.backgroundColor="rgba(0, 0, 0, 0.7)",x.style.color="#fff",x.style.padding="5px",x.style.borderRadius="3px",x.style.pointerEvents="none",x.style.display="none",document.body.appendChild(x)}async loadConfig(t){var i,s,h,l,a,o,n,r,c,x,p,d,m;const y=await fetch(t),u=await y.text(),S=(new DOMParser).parseFromString(u,"application/xml"),A=S.getElementsByTagName("graphStyle")[0];A&&(g(this,e).graphStyle.graphTitle=(null==(i=A.getElementsByTagName("graphTitle")[0])?void 0:i.textContent)||g(this,e).graphStyle.graphTitle,g(this,e).graphStyle.legend.visible="true"===(null==(s=A.getElementsByTagName("legend")[0])?void 0:s.getAttribute("visible"))||g(this,e).graphStyle.legend.visible,g(this,e).graphStyle.axis.xAxis.title=(null==(h=A.getElementsByTagName("xAxis")[0])?void 0:h.getAttribute("title"))||g(this,e).graphStyle.axis.xAxis.title,g(this,e).graphStyle.axis.xAxis.tickNumber=parseInt((null==(l=A.getElementsByTagName("xAxis")[0])?void 0:l.getAttribute("tickNumber"))||g(this,e).graphStyle.axis.xAxis.tickNumber.toString(),10),g(this,e).graphStyle.axis.xAxis.showLine="true"===(null==(a=A.getElementsByTagName("xAxis")[0])?void 0:a.getAttribute("showLine"))||g(this,e).graphStyle.axis.xAxis.showLine,g(this,e).graphStyle.axis.yAxis.title=(null==(o=A.getElementsByTagName("yAxis")[0])?void 0:o.getAttribute("title"))||g(this,e).graphStyle.axis.yAxis.title,g(this,e).graphStyle.axis.yAxis.tickNumber=parseInt((null==(n=A.getElementsByTagName("yAxis")[0])?void 0:n.getAttribute("tickNumber"))||g(this,e).graphStyle.axis.yAxis.tickNumber.toString(),10),g(this,e).graphStyle.axis.yAxis.showLine="true"===(null==(r=A.getElementsByTagName("yAxis")[0])?void 0:r.getAttribute("showLine"))||g(this,e).graphStyle.axis.yAxis.showLine,g(this,e).graphStyle.graphType=(null==(c=A.getElementsByTagName("graphType")[0])?void 0:c.textContent)||g(this,e).graphStyle.graphType,g(this,e).graphStyle.seriesName=(null==(x=A.getElementsByTagName("seriesName")[0])?void 0:x.textContent)||g(this,e).graphStyle.seriesName);const b=S.getElementsByTagName("control")[0];b&&(g(this,e).control.zoom="true"===b.getAttribute("zoom")||g(this,e).control.zoom,g(this,e).control.pan="true"===b.getAttribute("pan")||g(this,e).control.pan,g(this,e).control.tooltip="true"===b.getAttribute("tooltip")||g(this,e).control.tooltip,g(this,e).control.locked="true"===b.getAttribute("locked")||g(this,e).control.locked,g(this,e).control.lockedMouse="true"===b.getAttribute("lockedMouse")||g(this,e).control.lockedMouse,g(this,e).control.lockedWheel="true"===b.getAttribute("lockedWheel")||g(this,e).control.lockedWheel);const f=S.getElementsByTagName("colorScheme")[0];f&&(g(this,e).colorScheme.background=(null==(p=f.getElementsByTagName("background")[0])?void 0:p.textContent)||g(this,e).colorScheme.background,g(this,e).colorScheme.axisColor=(null==(d=f.getElementsByTagName("axisColor")[0])?void 0:d.textContent)||g(this,e).colorScheme.axisColor,g(this,e).colorScheme.seriesColor=(null==(m=f.getElementsByTagName("seriesColor")[0])?void 0:m.textContent)||g(this,e).colorScheme.seriesColor)}async loadData(t){if("string"==typeof t){const e=await fetch(t),s=await e.text();t.endsWith(".csv")?d(this,i,this.parseCSV(s)):t.endsWith(".json")?d(this,i,JSON.parse(s)):t.endsWith(".xml")&&d(this,i,this.parseXML(s))}else d(this,i,t);const s=g(this,i).map((t=>t.xValue)),h=Math.min(...s),l=Math.max(...s),a=.1*(l-h);g(this,e).graphStyle.axis.xAxis.min=h<0?h-a:0,g(this,e).graphStyle.axis.xAxis.max=l+a;const o=g(this,i).map((t=>t.yValue)),n=Math.min(...o),r=Math.max(...o),c=.1*(r-n);g(this,e).graphStyle.axis.yAxis.min=n<0?n-c:0,g(this,e).graphStyle.axis.yAxis.max=r+c,this.draw()}parseCSV(t){const e=t.split("\n"),i=[];for(let s=0;s<e.length;s++){const t=e[s].split(",");i.push({xValue:parseFloat(t[0]),yValue:parseFloat(t[1])})}return i}parseXML(t){const e=(new DOMParser).parseFromString(t,"application/xml").getElementsByTagName("entry"),i=[];for(let s=0;s<e.length;s++){const t=e[s];i.push({xValue:parseFloat(t.getElementsByTagName("xValue")[0].textContent||"0"),yValue:parseFloat(t.getElementsByTagName("yValue")[0].textContent||"0")})}return i}draw(){g(this,h).clearRect(0,0,g(this,s).width,g(this,s).height),g(this,h).fillStyle=g(this,e).colorScheme.background,g(this,h).fillRect(0,0,g(this,s).width,g(this,s).height),g(this,h).strokeStyle=g(this,e).colorScheme.axisColor,g(this,h).beginPath(),g(this,h).moveTo(g(this,l),0),g(this,h).lineTo(g(this,l),g(this,s).height-g(this,a)),g(this,h).lineTo(g(this,s).width,g(this,s).height-g(this,a)),g(this,h).stroke(),g(this,h).fillStyle=g(this,e).colorScheme.axisColor,g(this,h).font="16px Arial",g(this,h).fillText(g(this,e).graphStyle.axis.xAxis.title,g(this,s).width/2,g(this,s).height-10),g(this,h).save(),g(this,h).rotate(-Math.PI/2),g(this,h).fillText(g(this,e).graphStyle.axis.yAxis.title,-g(this,s).height/2,20),g(this,h).restore();const t=g(this,e).graphStyle.axis.xAxis.min,o=g(this,e).graphStyle.axis.xAxis.max,n=g(this,e).graphStyle.axis.yAxis.min,r=g(this,e).graphStyle.axis.yAxis.max,c=g(this,e).graphStyle.axis.xAxis.tickNumber;for(let e=t;e<=o+(o-t)/Math.max(c,1);e+=(o-t)/Math.max(c,1)){const i=g(this,l)+(e-t)/(o-t)*(g(this,s).width-100);g(this,h).beginPath(),g(this,h).moveTo(i,g(this,s).height-g(this,a)),g(this,h).lineTo(i,g(this,s).height-g(this,a)+5),g(this,h).stroke(),g(this,h).fillText(e.toPrecision(3).toString(),i-5,g(this,s).height-30)}const x=g(this,e).graphStyle.axis.yAxis.tickNumber;for(let e=n;e<=r+(r-n)/Math.max(x,1);e+=(r-n)/Math.max(x,1)){const t=g(this,s).height-g(this,a)-(e-n)/(r-n)*(g(this,s).height-100);g(this,h).beginPath(),g(this,h).moveTo(g(this,l),t),g(this,h).lineTo(g(this,l)-5,t),g(this,h).stroke(),g(this,h).fillText(e.toPrecision(3).toString(),25,t+5)}if("line"===g(this,e).graphStyle.graphType){g(this,h).strokeStyle=g(this,e).colorScheme.seriesColor,g(this,h).beginPath(),g(this,h).moveTo(g(this,l)+(g(this,i)[0].xValue-t)/(o-t)*(g(this,s).width-100),g(this,s).height-g(this,a)-(g(this,i)[0].yValue-n)/(r-n)*(g(this,s).height-100));for(let e=1;e<g(this,i).length;e++)g(this,h).lineTo(g(this,l)+(g(this,i)[e].xValue-t)/(o-t)*(g(this,s).width-100),g(this,s).height-g(this,a)-(g(this,i)[e].yValue-n)/(r-n)*(g(this,s).height-100));g(this,h).stroke()}else if("scatter"===g(this,e).graphStyle.graphType){g(this,h).fillStyle=g(this,e).colorScheme.seriesColor;for(let e=0;e<g(this,i).length;e++){const c=g(this,l)+(g(this,i)[e].xValue-t)/(o-t)*(g(this,s).width-100),x=g(this,s).height-g(this,a)-(g(this,i)[e].yValue-n)/(r-n)*(g(this,s).height-100);g(this,h).beginPath(),g(this,h).arc(c,x,3,0,2*Math.PI),g(this,h).fill()}}g(this,e).graphStyle.legend.visible&&(g(this,h).fillStyle=g(this,e).colorScheme.seriesColor,g(this,h).fillRect(g(this,s).width-150,10,10,10),g(this,h).fillStyle=g(this,e).colorScheme.axisColor,g(this,h).fillText(g(this,e).graphStyle.seriesName,g(this,s).width-130,20)),g(this,h).fillStyle=g(this,e).colorScheme.axisColor,g(this,h).font="20px Arial",g(this,h).fillText(g(this,e).graphStyle.graphTitle,g(this,s).width/2-g(this,h).measureText(g(this,e).graphStyle.graphTitle).width/2,30)}setAxisLabels(t,i){g(this,e).graphStyle.axis.xAxis.title=t,g(this,e).graphStyle.axis.yAxis.title=i,this.draw()}setAxisRange(t,i,s,h){g(this,e).graphStyle.axis.xAxis.min=t,g(this,e).graphStyle.axis.xAxis.max=i,g(this,e).graphStyle.axis.yAxis.min=s,g(this,e).graphStyle.axis.yAxis.max=h,this.draw()}showLegend(t){g(this,e).graphStyle.legend.visible=t,this.draw()}setTitle(t){g(this,e).graphStyle.graphTitle=t,this.draw()}setColorScheme(t){g(this,e).colorScheme=t,this.draw()}enableZoom(t){g(this,e).control.zoom=t}handleZoom(t){if(!g(this,e).control.zoom||g(this,e).control.locked||g(this,e).control.lockedWheel)return;t.preventDefault();const i=t.deltaY>0?1.1:1/1.1,h=g(this,s).getBoundingClientRect(),l=(t.clientX-h.left)/g(this,s).width,a=(t.clientY-h.top)/g(this,s).height,o=g(this,e).graphStyle.axis.xAxis.max-g(this,e).graphStyle.axis.xAxis.min,n=g(this,e).graphStyle.axis.yAxis.max-g(this,e).graphStyle.axis.yAxis.min;g(this,e).graphStyle.axis.xAxis.min+=o*(1-i)*l,g(this,e).graphStyle.axis.xAxis.max-=o*(1-i)*(1-l),g(this,e).graphStyle.axis.yAxis.min+=n*(1-i)*a,g(this,e).graphStyle.axis.yAxis.max-=n*(1-i)*(1-a),this.draw()}enablePan(t){g(this,e).control.pan=t}startPan(t){!g(this,e).control.pan||g(this,e).control.locked||g(this,e).control.lockedMouse||(d(this,o,!0),d(this,n,t.clientX),d(this,r,t.clientY))}endPan(){d(this,o,!1)}handlePan(t){if(!g(this,o)||!g(this,e).control.pan||g(this,e).control.locked||g(this,e).control.lockedMouse)return;const i=t.clientX-g(this,n),h=t.clientY-g(this,r),l=g(this,e).graphStyle.axis.xAxis.max-g(this,e).graphStyle.axis.xAxis.min,a=g(this,e).graphStyle.axis.yAxis.max-g(this,e).graphStyle.axis.yAxis.min,c=i/g(this,s).width*l,x=h/g(this,s).height*a;g(this,e).graphStyle.axis.xAxis.min-=c,g(this,e).graphStyle.axis.xAxis.max-=c,g(this,e).graphStyle.axis.yAxis.min+=x,g(this,e).graphStyle.axis.yAxis.max+=x,d(this,n,t.clientX),d(this,r,t.clientY),this.draw()}enableTooltip(t){g(this,e).control.tooltip=t}showTooltip(t){if(!g(this,e).control.tooltip||g(this,e).control.locked||g(this,e).control.lockedMouse)return;const o=g(this,s).getBoundingClientRect(),n=t.clientX-o.left,r=t.clientY-o.top,c=g(this,e).graphStyle.axis.xAxis.min,x=g(this,e).graphStyle.axis.xAxis.max,p=g(this,e).graphStyle.axis.yAxis.min,d=g(this,e).graphStyle.axis.yAxis.max,m=c+n/g(this,s).width*(x-c),y=d-r/g(this,s).height*(d-p);let u=null,S=1/0;for(const e of g(this,i)){const t=e.xValue-m,i=e.yValue-y,s=Math.sqrt(t*t+i*i);s<S&&(S=s,u=e)}if(u){const i=document.getElementById("tooltip");i&&(i.style.left=`${t.clientX+10}px`,i.style.top=`${t.clientY+10}px`,i.innerHTML=`x: ${u.xValue}, y: ${u.yValue}`,i.style.display="block"),this.draw(),g(this,h).fillStyle=g(this,e).colorScheme.seriesColor;const o=g(this,l)+(u.xValue-c)/(x-c)*(g(this,s).width-100),n=g(this,s).height-g(this,a)-(u.yValue-p)/(d-p)*(g(this,s).height-100);g(this,h).beginPath(),g(this,h).arc(o,n,5,0,2*Math.PI),g(this,h).fill()}else{const t=document.getElementById("tooltip");t&&(t.style.display="none"),this.draw()}}exportAsImage(t,e){const i=document.createElement("a");i.href=g(this,s).toDataURL(`image/${t}`),i.download=e?e.endsWith(`.${t}`)?e:`${e}.${t}`:`chart.${t}`,i.click()}getCurrentConfig(){return g(this,e)}getCurrentData(){return g(this,i)}exportCurrentConfig(t="config.xml"){const e=this.convertConfigToXml(this.getCurrentConfig()),i=new Blob([e],{type:"application/xml"}),s=document.createElement("a");s.href=URL.createObjectURL(i),s.download=t.endsWith(".xml")?t:`${t}.xml`,s.click()}convertConfigToXml(t){const e=document.implementation.createDocument("","",null),i=e.createElement("config"),s=e.createElement("graphStyle"),h=e.createElement("graphTitle");h.textContent=t.graphStyle.graphTitle,s.appendChild(h);const l=e.createElement("legend");l.setAttribute("visible",t.graphStyle.legend.visible.toString()),s.appendChild(l);const a=e.createElement("axis"),o=e.createElement("xAxis");o.setAttribute("title",t.graphStyle.axis.xAxis.title),o.setAttribute("tickNumber",t.graphStyle.axis.xAxis.tickNumber.toString()),o.setAttribute("showLine",t.graphStyle.axis.xAxis.showLine.toString()),a.appendChild(o);const n=e.createElement("yAxis");n.setAttribute("title",t.graphStyle.axis.yAxis.title),n.setAttribute("tickNumber",t.graphStyle.axis.yAxis.tickNumber.toString()),n.setAttribute("showLine",t.graphStyle.axis.yAxis.showLine.toString()),a.appendChild(n),s.appendChild(a);const r=e.createElement("graphType");r.textContent=t.graphStyle.graphType,s.appendChild(r),i.appendChild(s);const c=e.createElement("control");c.setAttribute("zoom",t.control.zoom.toString()),c.setAttribute("pan",t.control.pan.toString()),c.setAttribute("tooltip",t.control.tooltip.toString()),c.setAttribute("locked",t.control.locked.toString()),c.setAttribute("lockedMouse",t.control.lockedMouse.toString()),c.setAttribute("lockedWheel",t.control.lockedWheel.toString()),i.appendChild(c);const x=e.createElement("colorScheme"),g=e.createElement("background");g.textContent=t.colorScheme.background,x.appendChild(g);const p=e.createElement("axisColor");p.textContent=t.colorScheme.axisColor,x.appendChild(p);const d=e.createElement("seriesColor");d.textContent=t.colorScheme.seriesColor,x.appendChild(d),i.appendChild(x),e.appendChild(i);return(new XMLSerializer).serializeToString(e)}exportCurrentDataAsJSON(t="data.json"){const e=new Blob([JSON.stringify(this.getCurrentData(),null,2)],{type:"application/json"}),i=document.createElement("a");i.href=URL.createObjectURL(e),i.download=t.endsWith(".json")?t:`${t}.json`,i.click()}exportCurrentDataAsCSV(t="data.csv"){const e=g(this,i).map((t=>`${t.xValue},${t.yValue}`)).join("\n"),s=new Blob([e],{type:"text/csv"}),h=document.createElement("a");h.href=URL.createObjectURL(s),h.download=t.endsWith(".csv")?t:`${t}.csv`,h.click()}exportCurrentDataAsXML(t="data.xml"){const e="<data>\n"+g(this,i).map((t=>`  <entry>\n    <value1>${t.xValue}</value1>\n    <value2>${t.yValue}</value2>\n  </entry>`)).join("\n")+"\n</data>",s=new Blob([e],{type:"application/xml"}),h=document.createElement("a");h.href=URL.createObjectURL(s),h.download=t.endsWith(".xml")?t:`${t}.xml`,h.click()}onError(t){window.addEventListener("error",(e=>{t(e.error)}))}}e=new WeakMap,i=new WeakMap,s=new WeakMap,h=new WeakMap,l=new WeakMap,a=new WeakMap,o=new WeakMap,n=new WeakMap,r=new WeakMap,t.createChart=function(t){return new m(t)},Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
